# Server properties
server:
  port: 8160

# Information for the info endpoint
info:
  app:
    environment: DEV
    name: ${spring.application.name}
    description: Email Service - Local Instance

# Spring application properties
spring:
  application:
    name: comms-email
  profiles:
    active: dev
  config:
    import:
      - optional:configserver:discovery://config-server
      - optional:file:./env.properties
  rabbitmq:
    host: ${RMQ_HOST}
    port: ${RMQ_PORT}
    username: ${RMQ_USERNAME}
    password: ${RMQ_PASSWORD}

# AWS configuration
aws:
  accessKey: ${AWS_ACCESS_KEY}
  secretKey: ${AWS_SECRET_KEY}
  ses:
    region: ${AWS_SES_REGION}

# Email configuration
email:
  fromEmail: ${FROM_EMAIL}

# Frontend configuration
frontend:
  baseUrl: ${FRONTEND_BASE_URL}

# Eureka configuration
eureka:
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_DEFAULT_ZONE}
  instance:
    preferIpAddress: true

# RabbitMQ settings
rabbitmq:
  exchange: ${RMQ_EXCHANGE}
  queues:
    platform-emails: ${RMQ_PLATFORM_EMAILS_Q}
  routing-keys:
    platform-emails: ${RMQ_PLATFORM_EMAILS_RK}

# Management properties
management:
  info:
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: info, health, refresh

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    com.mariuszilinskas.vsp: DEBUG
